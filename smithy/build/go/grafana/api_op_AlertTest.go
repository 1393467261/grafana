// Code generated by smithy-go-codegen DO NOT EDIT.


package grafana

import (
	"context"
	"github.com/grafana/grafana/smithy/build/go/grafana/document"
	"github.com/aws/smithy-go/middleware"
	"github.com/grafana/grafana/smithy/build/go/grafana/types"
)

// Make a test alert.
func (c *Client) AlertTest(ctx context.Context, params *AlertTestInput, optFns ...func(*Options)) (*AlertTestOutput, error) {
	if params == nil { params = &AlertTestInput{} }
	
	result, metadata, err := c.invokeOperation(ctx, "AlertTest", params, optFns, c.addOperationAlertTestMiddlewares)
	if err != nil { return nil, err }
	
	out := result.(*AlertTestOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type AlertTestInput struct {
	
	// This member is required.
	Dashboard document.Interface
	
	// This member is required.
	PanelId *string
	
	OrgId int64
	
	noSmithyDocumentSerde
}

type AlertTestOutput struct {
	
	// This member is required.
	ConditionEvals *string
	
	// This member is required.
	Firing bool
	
	// This member is required.
	State *string
	
	// This member is required.
	TimeMs *string
	
	EvalMatches []types.EvalMatch
	
	Logs []types.AlertTestResultLog
	
	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
	
	noSmithyDocumentSerde
}

func (c *Client) addOperationAlertTestMiddlewares(stack *middleware.Stack, options Options) (err error) {
	if err = addSetLoggerMiddleware(stack, options); err != nil {
	return err
	}
	if err = addOpAlertTestValidationMiddleware(stack); err != nil {
	return err
	}
	return nil
}
