---
depends_on: []
kind: pipeline
name: test-pr
platform:
  arch: amd64
  os: linux
services: null
steps:
- commands:
  - echo $DRONE_RUNNER_NAME
  image: alpine:3.14.2
  name: identify-runner
- commands:
  - mkdir -p bin
  - curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v2.4.6/grabpl
  - chmod +x bin/grabpl
  - yarn cache dir
  - curl -fLO https://github.com/jwilder/dockerize/releases/download/v$${DOCKERIZE_VERSION}/dockerize-linux-amd64-v$${DOCKERIZE_VERSION}.tar.gz
  - tar -C bin -xzvf dockerize-linux-amd64-v$${DOCKERIZE_VERSION}.tar.gz
  - rm dockerize-linux-amd64-v$${DOCKERIZE_VERSION}.tar.gz
  - yarn install --frozen-lockfile --no-progress
  environment:
    DOCKERIZE_VERSION: 0.6.1
    YARN_CACHE_FOLDER: /cache
  image: grafana/build-container:1.4.2
  name: initialize
- commands:
  - |-
    echo -e "unknwon
    referer
    errorstring
    eror
    iam
    wan" > words_to_ignore.txt
  - codespell -I words_to_ignore.txt docs/
  depends_on:
  - initialize
  image: grafana/build-container:1.4.2
  name: codespell
- commands:
  - ./bin/grabpl shellcheck
  depends_on:
  - initialize
  image: grafana/build-container:1.4.2
  name: shellcheck
- depends_on:
  - initialize
  image: meltwater/drone-cache
  name: restore-cache
  pull: always
  settings:
    access_key:
      from_secret: access_key
    backend: s3
    bucket: test-julien
    endpoint: https://storage.googleapis.com
    mount:
    - /cache
    region: auto
    restore: "true"
    secret_key:
      from_secret: secret
  volumes:
  - name: cache
    path: /cache
- commands:
  - make gen-go
  - ./bin/grabpl lint-backend --edition oss
  depends_on:
  - restore-cache
  environment:
    CGO_ENABLED: "1"
  image: grafana/build-container:1.4.2
  name: lint-backend
- commands:
  - yarn run ci:test-frontend
  depends_on:
  - lint-backend
  environment:
    TEST_MAX_WORKERS: 50%
    YARN_CACHE_FOLDER: /cache
  image: grafana/build-container:1.4.2
  name: test-frontend
- commands:
  - ./bin/grabpl build-frontend --jobs 8 --no-install-deps --edition oss --build-id
    ${DRONE_BUILD_NUMBER} --no-pull-enterprise
  depends_on:
  - lint-backend
  environment:
    YARN_CACHE_FOLDER: /cache
  image: grafana/build-container:1.4.2
  name: build-frontend
- depends_on:
  - build-frontend
  image: meltwater/drone-cache
  name: rebuild-cache
  pull: always
  settings:
    access_key:
      from_secret: access_key
    backend: s3
    bucket: test-julien
    endpoint: https://storage.googleapis.com
    mount:
    - /cache
    rebuild: "true"
    region: auto
    secret_key:
      from_secret: secret
  volumes:
  - name: cache
    path: /cache
  when:
    event: pull_request
trigger:
  event:
  - pull_request
type: docker
volumes:
- name: cache
  temp: {}
---
kind: signature
hmac: b537cbacf128e5355db11ab6d6d073abd88f348db4340d8595e56c5e4a236ba9

...
