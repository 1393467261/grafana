---
depends_on: []
kind: pipeline
name: pr-build-e2e
node:
  type: no-parallel
platform:
  arch: amd64
  os: linux
services: []
steps:
- commands:
  - mkdir -p bin
  - curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v2.7.4/grabpl
  - chmod +x bin/grabpl
  image: byrnedo/alpine-curl:0.1.8
  name: grabpl
- depends_on:
  - clone
  image: meltwater/drone-cache:v1.2.2
  name: restore-cache
  pull: always
  settings:
    backend: gcs
    bucket: test-julien
    cache_key: test123
    json_key:
      from_secret: tf_google_credentials
    mount:
    - yarncache
    - node_modules
    restore: "true"
- commands:
  - echo $DRONE_RUNNER_NAME
  image: alpine:3.14.3
  name: identify-runner
- commands:
  - make gen-go
  - ./bin/grabpl gen-version --build-id ${DRONE_BUILD_NUMBER}
  - ls -a yarncache
  - yarn install --immutable
  depends_on:
  - restore-cache
  environment:
    YARN_CACHE_FOLDER: /drone/src/yarncache
  image: grafana/build-container:1.4.8
  name: initialize
- commands:
  - ./bin/grabpl build-backend --jobs 8 --edition oss --build-id ${DRONE_BUILD_NUMBER}
    --variants linux-x64,linux-x64-musl,osx64,win64,armv6 --no-pull-enterprise
  depends_on:
  - initialize
  environment: {}
  image: grafana/build-container:1.4.8
  name: build-backend
- commands:
  - ./bin/grabpl build-frontend --jobs 8 --no-install-deps --edition oss --build-id
    ${DRONE_BUILD_NUMBER} --no-pull-enterprise
  depends_on:
  - initialize
  environment:
    NODE_OPTIONS: --max_old_space_size=8192
    YARN_CACHE_FOLDER: /drone/src/yarncache
  image: grafana/build-container:1.4.8
  name: build-frontend
- commands:
  - ./bin/grabpl build-plugins --jobs 8 --edition oss --no-install-deps
  depends_on:
  - initialize
  environment: null
  image: grafana/build-container:1.4.8
  name: build-plugins
- depends_on:
  - initialize
  image: meltwater/drone-cache:v1.2.2
  name: rebuild-cache
  pull: always
  settings:
    backend: gcs
    bucket: test-julien
    cache_key: test123
    json_key:
      from_secret: tf_google_credentials
    mount:
    - yarncache
    - node_modules
    rebuild: "true"
  when:
    event: pull_request
- commands:
  - . scripts/build/gpg-test-vars.sh && ./bin/grabpl package --jobs 8 --edition oss
    --build-id ${DRONE_BUILD_NUMBER} --no-pull-enterprise --variants linux-x64,linux-x64-musl,osx64,win64,armv6
  depends_on:
  - build-plugins
  - build-backend
  - build-frontend
  environment: null
  image: grafana/build-container:1.4.8
  name: package
- commands:
  - yarn run cypress install
  depends_on:
  - package
  image: grafana/ci-e2e:12.19.0-1
  name: cypress
  volumes:
  - name: cypress_cache
    path: /root/.cache/Cypress
- commands:
  - ./e2e/start-server
  depends_on:
  - package
  detach: true
  environment:
    PORT: 3001
  image: grafana/build-container:1.4.8
  name: end-to-end-tests-server
- commands:
  - ./bin/grabpl e2e-tests --port 3001 --suite dashboards-suite
  depends_on:
  - cypress
  environment:
    HOST: end-to-end-tests-server
  image: grafana/ci-e2e:12.19.0-1
  name: end-to-end-tests-dashboards-suite
  volumes:
  - name: cypress_cache
    path: /root/.cache/Cypress
- commands:
  - ./bin/grabpl e2e-tests --port 3001 --suite smoke-tests-suite
  depends_on:
  - cypress
  environment:
    HOST: end-to-end-tests-server
  image: grafana/ci-e2e:12.19.0-1
  name: end-to-end-tests-smoke-tests-suite
  volumes:
  - name: cypress_cache
    path: /root/.cache/Cypress
- commands:
  - ./bin/grabpl e2e-tests --port 3001 --suite panels-suite
  depends_on:
  - cypress
  environment:
    HOST: end-to-end-tests-server
  image: grafana/ci-e2e:12.19.0-1
  name: end-to-end-tests-panels-suite
  volumes:
  - name: cypress_cache
    path: /root/.cache/Cypress
- commands:
  - ./bin/grabpl e2e-tests --port 3001 --suite various-suite
  depends_on:
  - cypress
  environment:
    HOST: end-to-end-tests-server
  image: grafana/ci-e2e:12.19.0-1
  name: end-to-end-tests-various-suite
  volumes:
  - name: cypress_cache
    path: /root/.cache/Cypress
trigger:
  event:
  - pull_request
type: docker
volumes:
- name: cypress_cache
  temp: {}
- host:
    path: /var/run/docker.sock
  name: docker
---
get:
  name: .dockerconfigjson
  path: secret/data/common/gcr
kind: secret
name: dockerconfigjson
---
get:
  name: pat
  path: infra/data/ci/github/grafanabot
kind: secret
name: github_token
---
get:
  name: machine-user-token
  path: infra/data/ci/drone
kind: secret
name: drone_token
---
get:
  name: credentials.json
  path: infra/data/ci/terraform/google
kind: secret
name: tf_google_credentials
---
get:
  name: access-key
  path: infra/data/ci/test-drone-caching
kind: secret
name: access_key
---
get:
  name: secret
  path: infra/data/ci/test-drone-caching
kind: secret
name: secret
---
get:
  name: bucket
  path: infra/data/ci/grafana/prerelease
kind: secret
name: prerelease_bucket
---
kind: signature
hmac: cab080ace6e6f05babd13065c8ec47817fd9e60d6f2d9f1df2e4db88e12152e8

...
